generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  createdAt     DateTime    @default(now())
  title         String      @db.VarChar(100)
  description   String?     @db.VarChar(450)
  nights        String
  accommodation String      @db.VarChar(250)
  flights       String      @db.VarChar(250)
  transfers     String      @db.VarChar(250)
  meals         String      @db.VarChar(250)
  includes      String[]    @db.VarChar
  info          String[]    @db.VarChar
  image         String
  id            String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating        Decimal?
  trip_index    Trip[]
  start_date    DateTime?   @db.Date
  end_date      DateTime?   @db.Date
  price_excl    Int?
  price_incl    Int?
  deal          Deals?
  itinerary     Itinerary?
  cities        Cities[]    @relation("CitiesToProfile")
  location      Locations[] @relation("LocationsToProfile")
}

model Itinerary {
  id        Int      @id @default(autoincrement())
  daily     String[]
  profileId String   @unique @db.Uuid
  profile   Profile  @relation(fields: [profileId], references: [id])
  stays     Stays[]
}

model Stays {
  id          Int       @id @default(autoincrement())
  nights      String
  hotelId     Int
  itineraryId Int
  hotel       Hotels    @relation(fields: [hotelId], references: [id])
  itinerary   Itinerary @relation(fields: [itineraryId], references: [id])

  @@unique([hotelId, itineraryId])
}

model Hotels {
  id       Int     @id @default(autoincrement())
  stars    String?
  location String? @db.VarChar(250)
  name     String
  stays    Stays[]
}

model Deals {
  id        Int     @id @default(autoincrement())
  profileId String  @unique @db.Uuid
  profile   Profile @relation(fields: [profileId], references: [id])
}

model Destinations {
  id          Int    @id @default(autoincrement())
  destination String @unique
  image       String @default("")
}

model Locations {
  id       Int       @id @default(autoincrement())
  location String
  profile  Profile[] @relation("LocationsToProfile")
}

model Cities {
  id      Int       @id @default(autoincrement())
  city    String
  profile Profile[] @relation("CitiesToProfile")
}

model Contacts {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  email      String?  @db.VarChar
}

enum Trip {
  HOLIDAYS
  CRUISES
  TOURS
  RESORTS
  FLIGHTS
}
